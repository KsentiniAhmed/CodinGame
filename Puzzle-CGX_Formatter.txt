import java.util.*;
import java.io.*;
import java.math.*;

/**
 * Auto-generated code below aims at helping you parse
 * the standard input according to the problem statement.
 **/
class Solution {

    public static void main(String args[]) {
        Scanner in = new Scanner(System.in);
        int N = in.nextInt();
        in.nextLine();
        String CGXLine[] = new String[N];
        String ligneComplete = "";
        for (int i = 0; i < N; i++) {
            CGXLine[i] = in.nextLine();
            //System.err.println(CGXLine[i]);
            ligneComplete += CGXLine[i];
        }
        
        System.err.println(ligneComplete);
        
        formateLigne(ligneComplete);
    }
    
    public static void ecritLigneFormate(String ligne){
       if (ligne == null || ligne.trim().equalsIgnoreCase("")){
            return;
        }
        System.out.println(ligne);
    }
    
    public static void formateLigne(String ligne){
        
        if (ligne == null || ligne.trim().equalsIgnoreCase("")){
            return;
        }
        int dernierIndexOuvre = 0;
        int dernierIndexFerme = 0;
        String newLigne = ligne.trim();
        
        if(newLigne.indexOf('(') < 0){
            ecritLigneFormate(newLigne);
        }
        
        List<Integer> listeIndexOuvre = new ArrayList<>();
        List<Integer> listeIndexFerme = new ArrayList<>();
        int nbOuvre;
        
        while (newLigne.indexOf('(',dernierIndexOuvre) >= 0){
            listeIndexOuvre.add(newLigne.indexOf('(',dernierIndexOuvre));
            dernierIndexOuvre = newLigne.indexOf('(',dernierIndexOuvre) + 1;
        }
        nbOuvre = listeIndexOuvre.size();
        //System.err.println(nbOuvre);
        
        while (newLigne.indexOf(')',dernierIndexFerme) >= 0){
            listeIndexFerme.add(newLigne.indexOf(')',dernierIndexFerme));
            dernierIndexFerme = newLigne.indexOf(')',dernierIndexFerme) + 1;
        }
        if(nbOuvre > 0 && listeIndexOuvre.get(0) > 0){
            ecritLigneFormate(newLigne.substring(0,listeIndexOuvre.get(0)).trim());
        }
        
        testDoubleBoucle(newLigne,listeIndexOuvre,listeIndexFerme);
        
        if(nbOuvre > 0 && listeIndexFerme.get(nbOuvre-1)+1 < newLigne.length()){
            ecritLigneFormate(newLigne.substring(listeIndexFerme.get(nbOuvre-1)+1).trim());
        }
    }
    
    public static void testDoubleBoucle(String newLigne,List<Integer> listeIndexOuvre,List<Integer> listeIndexFerme){
        int nbOuvre = listeIndexOuvre.size();
        String tab = "    ";
        String espace = "";
        boolean fermeture = false;
        boolean nonModifiable =false;
        int nbOuverture = 0;
        int nbEspace = 0;
        String ligneFormat ="";
        
        for(int i =0; i< nbOuvre ; i++){
            int minChar = listeIndexOuvre.get(i);
            int maxChar;
            if(i<nbOuvre-1){
                maxChar = listeIndexOuvre.get(i+1);
            }else {
                maxChar = listeIndexFerme.get(i);
            }
            if(!nonModifiable){
                ecritLigneFormate(espace + "(");
                nbOuverture++;
                //System.err.println(minChar +" - " +maxChar);
                ligneFormat ="";
            }
            for(int intChar = minChar+1; intChar< maxChar+1 ; intChar++){
                
                if(nonModifiable){
                    ligneFormat += newLigne.charAt(intChar);
                    if(newLigne.charAt(intChar) == '\''){
                        nonModifiable = false;
                        //System.err.println("Dans non modifiable false " +ligneFormat);
                        //System.err.println(nbOuverture +" - " + nbEspace);
                    }
                }else if(newLigne.charAt(intChar) == '\''){
                    ligneFormat += newLigne.charAt(intChar);
                    nonModifiable = true;
                }else if(newLigne.charAt(intChar) == ')'){
                    ecritLigneFormate(espace + tab +ligneFormat.trim());
                    //System.err.println(nbOuverture +" - " + nbEspace);
                    if (!espace.equalsIgnoreCase("") && nbOuverture == nbEspace){
                        espace = espace.substring(0,espace.length()-4);
                        nbEspace--;
                    }
                    if((intChar+1) < maxChar && newLigne.charAt(intChar+1) ==';'){
                        ecritLigneFormate(espace + ");");
                        intChar++;
                    }else {
                        ecritLigneFormate(espace + ")");
                    }
                    ligneFormat = "";
                    fermeture = true;
                    nbOuverture--;
                    if (!espace.equalsIgnoreCase("") && nbOuverture == nbEspace && i == nbOuvre-1){
                        espace = espace.substring(0,espace.length()-4);
                        nbEspace--;
                    }
                }else if(newLigne.charAt(intChar) ==';') {
                    ecritLigneFormate(espace + tab + ligneFormat.trim() + ";");
                    ligneFormat = "";
                }
                else{
                    if(newLigne.charAt(intChar)!= ' '){
                        ligneFormat += newLigne.charAt(intChar);
                    }
                }
                if(!nonModifiable && intChar == maxChar && ligneFormat.length() > 1){
                    int intParenthese = ligneFormat.indexOf('(');
                    ecritLigneFormate(espace + tab + ligneFormat.substring(0,intParenthese).trim());
                }
            }
            if(!fermeture && !nonModifiable){
                espace += tab;
                nbEspace++;
            }
        }
    }
}